#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable

layout(set = 0, binding = 0, rgba8)     uniform image2D G_BUFFER_DIFFUSE;	
layout(set = 0, binding = 1, rgba8)     uniform image2D G_BUFFER_NORMAL;	
layout(set = 0, binding = 2, rgba8)     uniform image2D G_BUFFER_ARM;	
layout(set = 0, binding = 3, rgba16f)   uniform image2D G_BUFFER_POS;		
layout(set = 0, binding = 4, rgba16f)   uniform image2D FINAL_COLOR;		

layout(set = 0, binding = 5) uniform setting { 
    uint mode;
} SETTING;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
void main()
{
    ivec2 pixel = ivec2(gl_GlobalInvocationID.xy);

    vec3 diffuse    = imageLoad(G_BUFFER_DIFFUSE, pixel).xyz;
    vec3 normal     = imageLoad(G_BUFFER_NORMAL, pixel).xyz;
    vec3 arm        = imageLoad(G_BUFFER_ARM, pixel).xyz;
    vec3 pos        = imageLoad(G_BUFFER_POS, pixel).xyz;

    vec4 finalColor = vec4(0.0f);
    if(SETTING.mode == 0) finalColor = vec4(diffuse, 1.0f);
    if(SETTING.mode == 1) finalColor = vec4(normal, 1.0f);
    if(SETTING.mode == 2) finalColor = vec4(arm, 1.0f);
    if(SETTING.mode == 3) finalColor = vec4(pos, 1.0f);

    imageStore(FINAL_COLOR, pixel, finalColor);
}